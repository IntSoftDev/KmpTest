buildscript {
    dependencies {
        classpath "com.jfrog.bintray.gradle:gradle-bintray-plugin:1.8.5"
    }
}

plugins {
    id 'org.jetbrains.kotlin.multiplatform' version '1.4.10'
    id 'com.android.library'
    id 'kotlin-android-extensions'
    id "base"
    id "maven-publish"
}

apply plugin: 'com.jfrog.bintray'

def GROUP_ID="com.intsoftdev" // Your orginization in reverse domain notation. For example:  def GROUP_ID="com.fudge"
def ARTIFACT_ID="KmpTest" // The name you gave your package in bintray. In our example it would be:  def ARTIFACT_ID="kotlin-awesome-printer"

def BINTRAY_REPOSITORY="KmpTest" // What you named your repository in bintray. In our example it would be "myrepository"
def BINTRAY_ORGANIZATION="intsoftdev" //  Your public facing Bintray name. You can see your Bintray name on the top right corner in Bintray. I named it "guide" for our example.

def ISSUE_URL="https://github.com/IntSoftDev/KmpTest/issues" // A link to an issue tracker for the library, in our example: "https://github.com/natanfudge/KotlinAwesomePrinter/issues"
def SITE_URL="https://github.com/IntSoftDev/KmpTest" // A link to the library's site. In our example: "https://github.com/natanfudge/KotlinAwesomePrinter"
def VCS_URL="https://github.com/IntSoftDev/KmpTest.git" // A link to the version control system (where the code is stored). In our example: "https://github.com/natanfudge/KotlinAwesomePrinter.git"
def LIBRARY_VERSION_NAME=1.0 // The current version of your library. You will need to update this value whenever you upload a new release. For example: 1.0


repositories {
    google()
    jcenter()
    mavenCentral()
}

group GROUP_ID
version LIBRARY_VERSION_NAME

kotlin {
    android()
    iosX64('ios') {
        binaries {
            framework {
                baseName = 'library'
            }
        }
    }
    sourceSets {
        commonMain {

        }
        commonTest {
            dependencies {
                implementation kotlin('test-common')
                implementation kotlin('test-annotations-common')
            }
        }
        androidMain {
            dependencies {
                implementation 'com.google.android.material:material:1.2.1'
            }
        }
        androidTest {
            dependencies {
                implementation kotlin('test-junit')
                implementation 'junit:junit:4.13'
            }
        }
        iosMain {

        }
        iosTest {

        }
    }
}

afterEvaluate {
    project.publishing.publications.all {
        // rename artifacts
        groupId = GROUP_ID
        if (it.name.contains('metadata')) {
            artifactId = "$ARTIFACT_ID"
        } else {
            artifactId = "$ARTIFACT_ID-$name"
        }
    }
}

def getBintrayUserProperty() {
    return hasProperty('bintrayUser') ? project.property('bintrayUser') : System.getenv('BINTRAY_USER')
}

def getBintrayApiKeyProperty() {
    return hasProperty('bintrayApiKey') ? project.property('bintrayApiKey') : System.getenv('BINTRAY_API_KEY')
}

bintray {
    print(getBintrayApiKeyProperty())
    user = getBintrayUserProperty()
    key = getBintrayApiKeyProperty()
    publish = false

    pkg {
        repo = BINTRAY_REPOSITORY
        name = ARTIFACT_ID
        userOrg = BINTRAY_ORGANIZATION
        licenses = ['Apache-2.0']
        vcsUrl = VCS_URL
        websiteUrl = SITE_URL
        issueTrackerUrl = ISSUE_URL

        version {
            name = LIBRARY_VERSION_NAME
            vcsTag = LIBRARY_VERSION_NAME
            released = new Date()
        }
    }
}

// This specifies the publications to upload to bintray before doing the bintrayUpload gradle task.
//In the mpp configuration of one module after 1.3,
// it is not uploaded unless you explicitly specify artifacts in publications like this.
// It is not necessary to have the findAll part,
// [project name]-kotlinMultiplatformbut a directory containing only pom files will be uploaded, so it is better to exclude it.
bintrayUpload.doFirst {
    publications = publishing.publications.collect {
        it.name
    }.findAll {
        it != "kotlinMultiplatform"
    }
}

//The task of bintrayUpload depends on publishToMavenLocal set in the previous section.
// This will create maven artifacts when running bintrayUplaod's task.
bintrayUpload.dependsOn publishToMavenLocal

android {
    compileSdkVersion 29
    sourceSets.main.manifest.srcFile('src/androidMain/AndroidManifest.xml')
    defaultConfig {
        minSdkVersion 24
        targetSdkVersion 29
    }
}